diff -ruN a/drivers/media/dvb-core/dmxdev.c b/drivers/media/dvb-core/dmxdev.c
--- a/drivers/media/dvb-core/dmxdev.c	2020-04-30 10:02:30.033102843 +0800
+++ b/drivers/media/dvb-core/dmxdev.c	2020-04-30 10:00:14.397941546 +0800
@@ -82,10 +82,10 @@
 			break;
 		}
 
-		ret = wait_event_interruptible(src->queue,
-					       !dvb_ringbuffer_empty(src) ||
-					       (src->error != 0));
-		if (ret < 0)
+		ret = wait_event_interruptible_timeout(src->queue,
+				       !dvb_ringbuffer_empty(src) ||
+				       (src->error != 0),msecs_to_jiffies(20));
+		if (ret <= 0)
 			break;
 
 		if (src->error) {
diff -ruN a/drivers/media/dvb-core/dvb_demux.c b/drivers/media/dvb-core/dvb_demux.c
--- a/drivers/media/dvb-core/dvb_demux.c	2020-04-30 10:02:30.033102843 +0800
+++ b/drivers/media/dvb-core/dvb_demux.c	2020-04-30 10:00:14.397941546 +0800
@@ -31,6 +31,7 @@
 #include <linux/crc32.h>
 #include <asm/uaccess.h>
 #include <asm/div64.h>
+#include "dmxdev.h"
 
 #include "dvb_demux.h"
 #include "dvb_ex.h"
@@ -1301,7 +1302,25 @@
 
 		}
 	}
-	
+		
+	list_for_each_entry(feed, &dvbdemux->feed_list, list_head) {
+		if (feed->type == DMX_TYPE_TS && (feed->ts_type & TS_PACKET) && 
+			feed->pes_type == DMX_PES_OTHER)
+		{
+			struct dmx_ts_feed *tsfeed = &feed->feed.ts;
+			struct dmxdev_filter *dmxdevfilter = tsfeed->priv;
+			struct dvb_ringbuffer *buffer;
+			
+			if (dmxdevfilter->params.pes.output == DMX_OUT_TSDEMUX_TAP)
+			{
+				buffer = &dmxdevfilter->buffer;
+
+				if (dvb_ringbuffer_free(buffer) < count){
+					return 0;
+				}
+			}
+		}
+	}
 	return 1;
 }
 static int dvbdmx_write(struct dmx_demux *demux, const char __user *buf, size_t count)
